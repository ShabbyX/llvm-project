import("//build_overrides/llvm.gni")

import("//${llvm_build_root}/secondary/llvm/lib/Target/targets.gni")

static_library("Rewrite") {
  output_name = "LLVMBOLTRewrite"
  configs += [ "//${llvm_build_root}/build:bolt_code" ]
  deps = [
    "//${llvm_build_root}/secondary/bolt/lib/Core",
    "//${llvm_build_root}/secondary/bolt/lib/Passes",
    "//${llvm_build_root}/secondary/bolt/lib/Profile",
    "//${llvm_build_root}/secondary/bolt/lib/RuntimeLibs",
    "//${llvm_build_root}/secondary/bolt/lib/Utils",
    "//${llvm_build_root}/secondary/llvm/lib/CodeGen/AsmPrinter",
    "//${llvm_build_root}/secondary/llvm/lib/DWARFLinker",
    "//${llvm_build_root}/secondary/llvm/lib/DWP",
    "//${llvm_build_root}/secondary/llvm/lib/DebugInfo/DWARF",
    "//${llvm_build_root}/secondary/llvm/lib/ExecutionEngine/JITLink",
    "//${llvm_build_root}/secondary/llvm/lib/MC",
    "//${llvm_build_root}/secondary/llvm/lib/Object",
    "//${llvm_build_root}/secondary/llvm/lib/Support",
    "//${llvm_build_root}/secondary/llvm/lib/TargetParser",
    "//${llvm_build_root}/build/libs/pthread",
  ]
  sources = [
    "BinaryPassManager.cpp",
    "BoltDiff.cpp",
    "DWARFRewriter.cpp",
    "ExecutableFileMemoryManager.cpp",
    "JITLinkLinker.cpp",
    "LinuxKernelRewriter.cpp",
    "MachORewriteInstance.cpp",
    "MetadataManager.cpp",
    "PseudoProbeRewriter.cpp",
    "RewriteInstance.cpp",
    "SDTRewriter.cpp",
  ]

  defines = []
  if (llvm_build_AArch64) {
    defines += [ "AARCH64_AVAILABLE" ]
    deps += [ "//${llvm_build_root}/secondary/bolt/lib/Target/AArch64" ]
  }
  if (llvm_build_X86) {
    defines += [ "X86_AVAILABLE" ]
    deps += [ "//${llvm_build_root}/secondary/bolt/lib/Target/X86" ]
  }
}
