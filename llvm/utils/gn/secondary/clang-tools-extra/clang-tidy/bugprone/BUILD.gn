import("//build_overrides/llvm.gni")

static_library("bugprone") {
  output_name = "clangTidyBugproneModule"
  configs += [ "//${llvm_build_root}build:clang_code" ]
  deps = [
    "//${llvm_root}clang-tools-extra/clang-tidy",
    "//${llvm_root}clang-tools-extra/clang-tidy/cppcoreguidelines",
    "//${llvm_root}clang-tools-extra/clang-tidy/utils",
    "//${llvm_root}clang/lib/AST",
    "//${llvm_root}clang/lib/ASTMatchers",
    "//${llvm_root}clang/lib/Analysis",
    "//${llvm_root}clang/lib/Analysis/FlowSensitive",
    "//${llvm_root}clang/lib/Analysis/FlowSensitive/Models",
    "//${llvm_root}clang/lib/Basic",
    "//${llvm_root}clang/lib/Lex",
    "//${llvm_root}clang/lib/Tooling",
    "//${llvm_root}llvm/lib/Support",
  ]
  sources = [
    "ArgumentCommentCheck.cpp",
    "AssertSideEffectCheck.cpp",
    "AssignmentInIfConditionCheck.cpp",
    "BadSignalToKillThreadCheck.cpp",
    "BoolPointerImplicitConversionCheck.cpp",
    "BranchCloneCheck.cpp",
    "BugproneTidyModule.cpp",
    "CopyConstructorInitCheck.cpp",
    "DanglingHandleCheck.cpp",
    "DynamicStaticInitializersCheck.cpp",
    "EasilySwappableParametersCheck.cpp",
    "ExceptionEscapeCheck.cpp",
    "FoldInitTypeCheck.cpp",
    "ForwardDeclarationNamespaceCheck.cpp",
    "ForwardingReferenceOverloadCheck.cpp",
    "ImplicitWideningOfMultiplicationResultCheck.cpp",
    "InaccurateEraseCheck.cpp",
    "IncorrectRoundingsCheck.cpp",
    "InfiniteLoopCheck.cpp",
    "IntegerDivisionCheck.cpp",
    "LambdaFunctionNameCheck.cpp",
    "MacroParenthesesCheck.cpp",
    "MacroRepeatedSideEffectsCheck.cpp",
    "MisplacedOperatorInStrlenInAllocCheck.cpp",
    "MisplacedPointerArithmeticInAllocCheck.cpp",
    "MisplacedWideningCastCheck.cpp",
    "MoveForwardingReferenceCheck.cpp",
    "MultipleNewInOneExpressionCheck.cpp",
    "MultipleStatementMacroCheck.cpp",
    "NoEscapeCheck.cpp",
    "NonZeroEnumToBoolConversionCheck.cpp",
    "NotNullTerminatedResultCheck.cpp",
    "ParentVirtualCallCheck.cpp",
    "PosixReturnCheck.cpp",
    "RedundantBranchConditionCheck.cpp",
    "ReservedIdentifierCheck.cpp",
    "SharedPtrArrayMismatchCheck.cpp",
    "SignalHandlerCheck.cpp",
    "SignedCharMisuseCheck.cpp",
    "SizeofContainerCheck.cpp",
    "SizeofExpressionCheck.cpp",
    "SmartPtrArrayMismatchCheck.cpp",
    "SpuriouslyWakeUpFunctionsCheck.cpp",
    "StandaloneEmptyCheck.cpp",
    "StringConstructorCheck.cpp",
    "StringIntegerAssignmentCheck.cpp",
    "StringLiteralWithEmbeddedNulCheck.cpp",
    "StringviewNullptrCheck.cpp",
    "SuspiciousEnumUsageCheck.cpp",
    "SuspiciousIncludeCheck.cpp",
    "SuspiciousMemoryComparisonCheck.cpp",
    "SuspiciousMemsetUsageCheck.cpp",
    "SuspiciousMissingCommaCheck.cpp",
    "SuspiciousReallocUsageCheck.cpp",
    "SuspiciousSemicolonCheck.cpp",
    "SuspiciousStringCompareCheck.cpp",
    "SwappedArgumentsCheck.cpp",
    "TerminatingContinueCheck.cpp",
    "ThrowKeywordMissingCheck.cpp",
    "TooSmallLoopVariableCheck.cpp",
    "UncheckedOptionalAccessCheck.cpp",
    "UndefinedMemoryManipulationCheck.cpp",
    "UndelegatedConstructorCheck.cpp",
    "UnhandledExceptionAtNewCheck.cpp",
    "UnhandledSelfAssignmentCheck.cpp",
    "UniquePtrArrayMismatchCheck.cpp",
    "UnsafeFunctionsCheck.cpp",
    "UnusedRaiiCheck.cpp",
    "UnusedReturnValueCheck.cpp",
    "UseAfterMoveCheck.cpp",
    "VirtualNearMissCheck.cpp",
  ]
}
