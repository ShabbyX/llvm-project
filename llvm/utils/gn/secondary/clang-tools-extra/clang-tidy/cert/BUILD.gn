import("//build_overrides/llvm.gni")

static_library("cert") {
  output_name = "clangTidyCERTModule"
  configs += [ "//${llvm_build_root}/build:clang_code" ]
  deps = [
    "//${llvm_build_root}/secondary/clang-tools-extra/clang-tidy",
    "//${llvm_build_root}/secondary/clang-tools-extra/clang-tidy/google",
    "//${llvm_build_root}/secondary/clang-tools-extra/clang-tidy/misc",
    "//${llvm_build_root}/secondary/clang-tools-extra/clang-tidy/performance",
    "//${llvm_build_root}/secondary/clang-tools-extra/clang-tidy/readability",
    "//${llvm_build_root}/secondary/clang-tools-extra/clang-tidy/utils",
    "//${llvm_build_root}/secondary/clang/lib/AST",
    "//${llvm_build_root}/secondary/clang/lib/ASTMatchers",
    "//${llvm_build_root}/secondary/clang/lib/Basic",
    "//${llvm_build_root}/secondary/clang/lib/Lex",
    "//${llvm_build_root}/secondary/llvm/lib/Support",
  ]
  sources = [
    "CERTTidyModule.cpp",
    "CommandProcessorCheck.cpp",
    "DefaultOperatorNewAlignmentCheck.cpp",
    "DontModifyStdNamespaceCheck.cpp",
    "FloatLoopCounter.cpp",
    "LimitedRandomnessCheck.cpp",
    "MutatingCopyCheck.cpp",
    "NonTrivialTypesLibcMemoryCallsCheck.cpp",
    "PostfixOperatorCheck.cpp",
    "ProperlySeededRandomGeneratorCheck.cpp",
    "SetLongJmpCheck.cpp",
    "StaticObjectExceptionCheck.cpp",
    "StrToNumCheck.cpp",
    "ThrownExceptionTypeCheck.cpp",
    "VariadicFunctionDefCheck.cpp",
  ]
}
