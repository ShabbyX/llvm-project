import("//build_overrides/llvm.gni")

static_library("cppcoreguidelines") {
  output_name = "clangTidyCppCoreGuidelinesModule"
  configs += [ "//${llvm_build_root}build:clang_code" ]
  deps = [
    "//${llvm_root}clang-tools-extra/clang-tidy",
    "//${llvm_root}clang-tools-extra/clang-tidy/misc",
    "//${llvm_root}clang-tools-extra/clang-tidy/modernize",
    "//${llvm_root}clang-tools-extra/clang-tidy/readability",
    "//${llvm_root}clang-tools-extra/clang-tidy/utils",
    "//${llvm_root}clang/lib/AST",
    "//${llvm_root}clang/lib/ASTMatchers",
    "//${llvm_root}clang/lib/Basic",
    "//${llvm_root}clang/lib/Lex",
    "//${llvm_root}clang/lib/Serialization",
    "//${llvm_root}clang/lib/Tooling",
    "//${llvm_root}llvm/lib/Support",
  ]
  sources = [
    "AvoidCapturingLambdaCoroutinesCheck.cpp",
    "AvoidConstOrRefDataMembersCheck.cpp",
    "AvoidDoWhileCheck.cpp",
    "AvoidGotoCheck.cpp",
    "AvoidNonConstGlobalVariablesCheck.cpp",
    "AvoidReferenceCoroutineParametersCheck.cpp",
    "CppCoreGuidelinesTidyModule.cpp",
    "InitVariablesCheck.cpp",
    "InterfacesGlobalInitCheck.cpp",
    "MacroUsageCheck.cpp",
    "MisleadingCaptureDefaultByValueCheck.cpp",
    "MissingStdForwardCheck.cpp",
    "NarrowingConversionsCheck.cpp",
    "NoMallocCheck.cpp",
    "OwningMemoryCheck.cpp",
    "PreferMemberInitializerCheck.cpp",
    "ProBoundsArrayToPointerDecayCheck.cpp",
    "ProBoundsConstantArrayIndexCheck.cpp",
    "ProBoundsPointerArithmeticCheck.cpp",
    "ProTypeConstCastCheck.cpp",
    "ProTypeCstyleCastCheck.cpp",
    "ProTypeMemberInitCheck.cpp",
    "ProTypeReinterpretCastCheck.cpp",
    "ProTypeStaticCastDowncastCheck.cpp",
    "ProTypeUnionAccessCheck.cpp",
    "ProTypeVarargCheck.cpp",
    "RvalueReferenceParamNotMovedCheck.cpp",
    "SlicingCheck.cpp",
    "SpecialMemberFunctionsCheck.cpp",
    "VirtualClassDestructorCheck.cpp",
  ]
}
