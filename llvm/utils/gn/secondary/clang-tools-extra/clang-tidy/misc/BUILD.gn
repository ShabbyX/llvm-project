import("//build_overrides/llvm.gni")

import("//${llvm_build_root}/build/compiled_action.gni")

compiled_action("Confusables.inc") {
  tool = "ConfusableTable:clang-tidy-confusable-chars-gen"
  inputs = [ "ConfusableTable/confusables.txt" ]
  outputs = [ "$target_gen_dir/$target_name" ]
  args = [
    rebase_path(inputs[0], root_build_dir),
    rebase_path(outputs[0], root_build_dir),
  ]
}

static_library("misc") {
  output_name = "clangTidyMiscModule"
  configs += [ "//${llvm_build_root}/build:clang_code" ]
  include_dirs = [
    target_gen_dir,
    "//${llvm_build_root}/secondary/clang-tools-extra/include-cleaner/include",
  ]
  deps = [
    ":Confusables.inc",
    "//${llvm_build_root}/secondary/clang-tools-extra/clang-tidy",
    "//${llvm_build_root}/secondary/clang-tools-extra/clang-tidy/utils",
    "//${llvm_build_root}/secondary/clang-tools-extra/include-cleaner/lib",
    "//${llvm_build_root}/secondary/clang/lib/AST",
    "//${llvm_build_root}/secondary/clang/lib/ASTMatchers",
    "//${llvm_build_root}/secondary/clang/lib/Analysis",
    "//${llvm_build_root}/secondary/clang/lib/Basic",
    "//${llvm_build_root}/secondary/clang/lib/Lex",
    "//${llvm_build_root}/secondary/clang/lib/Serialization",
    "//${llvm_build_root}/secondary/clang/lib/Tooling",
    "//${llvm_build_root}/secondary/llvm/lib/Support",
  ]
  sources = [
    "ConfusableIdentifierCheck.cpp",
    "ConstCorrectnessCheck.cpp",
    "DefinitionsInHeadersCheck.cpp",
    "HeaderIncludeCycleCheck.cpp",
    "IncludeCleanerCheck.cpp",
    "MiscTidyModule.cpp",
    "MisleadingBidirectional.cpp",
    "MisleadingIdentifier.cpp",
    "MisplacedConstCheck.cpp",
    "NewDeleteOverloadsCheck.cpp",
    "NoRecursionCheck.cpp",
    "NonCopyableObjects.cpp",
    "NonPrivateMemberVariablesInClassesCheck.cpp",
    "RedundantExpressionCheck.cpp",
    "StaticAssertCheck.cpp",
    "ThrowByValueCatchByReferenceCheck.cpp",
    "UnconventionalAssignOperatorCheck.cpp",
    "UniqueptrResetReleaseCheck.cpp",
    "UnusedAliasDeclsCheck.cpp",
    "UnusedParametersCheck.cpp",
    "UnusedUsingDeclsCheck.cpp",
    "UseAnonymousNamespaceCheck.cpp",
  ]
}
