import("//build_overrides/llvm.gni")

static_library("performance") {
  output_name = "clangTidyPerformanceModule"
  configs += [ "//${llvm_build_root}/build:clang_code" ]
  deps = [
    "//${llvm_build_root}/secondary/clang-tools-extra/clang-tidy",
    "//${llvm_build_root}/secondary/clang-tools-extra/clang-tidy/utils",
    "//${llvm_build_root}/secondary/clang/lib/AST",
    "//${llvm_build_root}/secondary/clang/lib/ASTMatchers",
    "//${llvm_build_root}/secondary/clang/lib/Analysis",
    "//${llvm_build_root}/secondary/clang/lib/Basic",
    "//${llvm_build_root}/secondary/clang/lib/Lex",
    "//${llvm_build_root}/secondary/llvm/lib/Support",
  ]
  sources = [
    "AvoidEndlCheck.cpp",
    "FasterStringFindCheck.cpp",
    "ForRangeCopyCheck.cpp",
    "ImplicitConversionInLoopCheck.cpp",
    "InefficientAlgorithmCheck.cpp",
    "InefficientStringConcatenationCheck.cpp",
    "InefficientVectorOperationCheck.cpp",
    "MoveConstArgCheck.cpp",
    "MoveConstructorInitCheck.cpp",
    "NoAutomaticMoveCheck.cpp",
    "NoIntToPtrCheck.cpp",
    "NoexceptDestructorCheck.cpp",
    "NoexceptFunctionBaseCheck.cpp",
    "NoexceptMoveConstructorCheck.cpp",
    "NoexceptSwapCheck.cpp",
    "PerformanceTidyModule.cpp",
    "TriviallyDestructibleCheck.cpp",
    "TypePromotionInMathFnCheck.cpp",
    "UnnecessaryCopyInitialization.cpp",
    "UnnecessaryValueParamCheck.cpp",
  ]
}
