import("//build_overrides/llvm.gni")

static_library("CodeGen") {
  output_name = "clangCodeGen"
  configs += [ "//${llvm_build_root}/build:clang_code" ]
  configs += llvm_code_override_configs_append
  configs -= llvm_code_override_configs_remove
  deps = [
    "//${llvm_build_root}/secondary/clang/include/clang/Basic:arm_cde_builtin_cg",
    "//${llvm_build_root}/secondary/clang/include/clang/Basic:arm_mve_builtin_cg",
    "//${llvm_build_root}/secondary/clang/include/clang/Basic:arm_sme_builtin_cg",
    "//${llvm_build_root}/secondary/clang/include/clang/Basic:arm_sve_builtin_cg",
    "//${llvm_build_root}/secondary/clang/include/clang/Basic:riscv_sifive_vector_builtin_cg",
    "//${llvm_build_root}/secondary/clang/include/clang/Basic:riscv_vector_builtin_cg",
    "//${llvm_build_root}/secondary/clang/lib/AST",
    "//${llvm_build_root}/secondary/clang/lib/Analysis",
    "//${llvm_build_root}/secondary/clang/lib/Basic",
    "//${llvm_build_root}/secondary/clang/lib/Frontend",
    "//${llvm_build_root}/secondary/clang/lib/Lex",
    "//${llvm_build_root}/secondary/llvm/lib/Analysis",
    "//${llvm_build_root}/secondary/llvm/lib/Bitcode/Reader",
    "//${llvm_build_root}/secondary/llvm/lib/CodeGen",
    "//${llvm_build_root}/secondary/llvm/lib/Demangle",
    "//${llvm_build_root}/secondary/llvm/lib/Frontend/HLSL",
    "//${llvm_build_root}/secondary/llvm/lib/IR",
    "//${llvm_build_root}/secondary/llvm/lib/IRPrinter",
    "//${llvm_build_root}/secondary/llvm/lib/IRReader",
    "//${llvm_build_root}/secondary/llvm/lib/LTO",
    "//${llvm_build_root}/secondary/llvm/lib/Linker",
    "//${llvm_build_root}/secondary/llvm/lib/MC",
    "//${llvm_build_root}/secondary/llvm/lib/Object",
    "//${llvm_build_root}/secondary/llvm/lib/Passes",
    "//${llvm_build_root}/secondary/llvm/lib/ProfileData",
    "//${llvm_build_root}/secondary/llvm/lib/ProfileData/Coverage",
    "//${llvm_build_root}/secondary/llvm/lib/Support",
    "//${llvm_build_root}/secondary/llvm/lib/Target",
    "//${llvm_build_root}/secondary/llvm/lib/TargetParser",
    "//${llvm_build_root}/secondary/llvm/lib/Transforms/Coroutines",
    "//${llvm_build_root}/secondary/llvm/lib/Transforms/IPO",
    "//${llvm_build_root}/secondary/llvm/lib/Transforms/InstCombine",
    "//${llvm_build_root}/secondary/llvm/lib/Transforms/Instrumentation",
    "//${llvm_build_root}/secondary/llvm/lib/Transforms/ObjCARC",
    "//${llvm_build_root}/secondary/llvm/lib/Transforms/Scalar",
    "//${llvm_build_root}/secondary/llvm/lib/Transforms/Utils",
  ]
  include_dirs = [ "." ]
  sources = [
    "ABIInfo.cpp",
    "ABIInfoImpl.cpp",
    "BackendUtil.cpp",
    "CGAtomic.cpp",
    "CGBlocks.cpp",
    "CGBuiltin.cpp",
    "CGCUDANV.cpp",
    "CGCUDARuntime.cpp",
    "CGCXX.cpp",
    "CGCXXABI.cpp",
    "CGCall.cpp",
    "CGClass.cpp",
    "CGCleanup.cpp",
    "CGCoroutine.cpp",
    "CGDebugInfo.cpp",
    "CGDecl.cpp",
    "CGDeclCXX.cpp",
    "CGException.cpp",
    "CGExpr.cpp",
    "CGExprAgg.cpp",
    "CGExprCXX.cpp",
    "CGExprComplex.cpp",
    "CGExprConstant.cpp",
    "CGExprScalar.cpp",
    "CGGPUBuiltin.cpp",
    "CGHLSLRuntime.cpp",
    "CGLoopInfo.cpp",
    "CGNonTrivialStruct.cpp",
    "CGObjC.cpp",
    "CGObjCGNU.cpp",
    "CGObjCMac.cpp",
    "CGObjCRuntime.cpp",
    "CGOpenCLRuntime.cpp",
    "CGOpenMPRuntime.cpp",
    "CGOpenMPRuntimeGPU.cpp",
    "CGRecordLayoutBuilder.cpp",
    "CGStmt.cpp",
    "CGStmtOpenMP.cpp",
    "CGVTT.cpp",
    "CGVTables.cpp",
    "CodeGenABITypes.cpp",
    "CodeGenAction.cpp",
    "CodeGenFunction.cpp",
    "CodeGenModule.cpp",
    "CodeGenPGO.cpp",
    "CodeGenTBAA.cpp",
    "CodeGenTypes.cpp",
    "ConstantInitBuilder.cpp",
    "CoverageMappingGen.cpp",
    "ItaniumCXXABI.cpp",
    "MacroPPCallbacks.cpp",
    "MicrosoftCXXABI.cpp",
    "ModuleBuilder.cpp",
    "ObjectFilePCHContainerOperations.cpp",
    "PatternInit.cpp",
    "SanitizerMetadata.cpp",
    "SwiftCallingConv.cpp",
    "TargetInfo.cpp",
    "Targets/AArch64.cpp",
    "Targets/AMDGPU.cpp",
    "Targets/ARC.cpp",
    "Targets/ARM.cpp",
    "Targets/AVR.cpp",
    "Targets/BPF.cpp",
    "Targets/CSKY.cpp",
    "Targets/Hexagon.cpp",
    "Targets/Lanai.cpp",
    "Targets/LoongArch.cpp",
    "Targets/M68k.cpp",
    "Targets/MSP430.cpp",
    "Targets/Mips.cpp",
    "Targets/NVPTX.cpp",
    "Targets/PNaCl.cpp",
    "Targets/PPC.cpp",
    "Targets/RISCV.cpp",
    "Targets/SPIR.cpp",
    "Targets/Sparc.cpp",
    "Targets/SystemZ.cpp",
    "Targets/TCE.cpp",
    "Targets/VE.cpp",
    "Targets/WebAssembly.cpp",
    "Targets/X86.cpp",
    "Targets/XCore.cpp",
    "VarBypassDetector.cpp",
  ]
}
