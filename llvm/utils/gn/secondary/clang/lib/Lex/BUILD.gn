import("//build_overrides/llvm.gni")

static_library("Lex") {
  output_name = "clangLex"
  configs += [ "//${llvm_build_root}/build:clang_code" ]
  configs += llvm_code_override_configs_append
  configs -= llvm_code_override_configs_remove
  deps = [
    "//${llvm_build_root}/secondary/clang/lib/Basic",
    "//${llvm_build_root}/secondary/llvm/lib/Support",
    "//${llvm_build_root}/secondary/llvm/lib/TargetParser",
  ]
  sources = [
    "DependencyDirectivesScanner.cpp",
    "HeaderMap.cpp",
    "HeaderSearch.cpp",
    "InitHeaderSearch.cpp",
    "Lexer.cpp",
    "LiteralSupport.cpp",
    "MacroArgs.cpp",
    "MacroInfo.cpp",
    "ModuleMap.cpp",
    "PPCaching.cpp",
    "PPCallbacks.cpp",
    "PPConditionalDirectiveRecord.cpp",
    "PPDirectives.cpp",
    "PPExpressions.cpp",
    "PPLexerChange.cpp",
    "PPMacroExpansion.cpp",
    "Pragma.cpp",
    "PreprocessingRecord.cpp",
    "Preprocessor.cpp",
    "PreprocessorLexer.cpp",
    "ScratchBuffer.cpp",
    "TokenConcatenation.cpp",
    "TokenLexer.cpp",
  ]
}
