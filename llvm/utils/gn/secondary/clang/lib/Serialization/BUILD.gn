import("//build_overrides/llvm.gni")

static_library("Serialization") {
  output_name = "clangSerialization"
  configs += [ "//${llvm_build_root}build:clang_code" ]
  configs += llvm_code_override_configs_append
  configs -= llvm_code_override_configs_remove
  deps = [
    "//${llvm_root}clang/include/clang/Serialization:AttrPCHRead",
    "//${llvm_root}clang/include/clang/Serialization:AttrPCHWrite",
    "//${llvm_root}clang/lib/AST",
    "//${llvm_root}clang/lib/Basic",
    "//${llvm_root}clang/lib/Lex",
    "//${llvm_root}clang/lib/Sema",
    "//${llvm_root}llvm/lib/Bitcode/Reader",
    "//${llvm_root}llvm/lib/Support",
    "//${llvm_root}llvm/lib/TargetParser",
  ]
  sources = [
    "ASTCommon.cpp",
    "ASTCommon.h",
    "ASTReader.cpp",
    "ASTReaderDecl.cpp",
    "ASTReaderInternals.h",
    "ASTReaderStmt.cpp",
    "ASTWriter.cpp",
    "ASTWriterDecl.cpp",
    "ASTWriterStmt.cpp",
    "GeneratePCH.cpp",
    "GlobalModuleIndex.cpp",
    "InMemoryModuleCache.cpp",
    "ModuleFile.cpp",
    "ModuleFileExtension.cpp",
    "ModuleManager.cpp",
    "PCHContainerOperations.cpp",
  ]
}
