import("//build_overrides/llvm.gni")

static_library("NativePDB") {
  output_name = "lldbPluginSymbolFileNativePDB"
  configs += [
    "//${llvm_build_root}build:clang_code",
    "//${llvm_build_root}build:lldb_code",
  ]
  deps = [
    "//${llvm_root}clang/lib/AST",
    "//${llvm_root}clang/lib/Lex",
    "//${llvm_root}lldb/source/Core",
    "//${llvm_root}lldb/source/Plugins/ObjectFile/PDB",
    "//${llvm_root}lldb/source/Symbol",
    "//${llvm_root}lldb/source/Utility",

    #"//${llvm_root}lldb/source/Plugins/TypeSystem/Clang", # 3-hop dependency cycle.
    "//${llvm_root}llvm/lib/DebugInfo/CodeView",
    "//${llvm_root}llvm/lib/DebugInfo/PDB",
    "//${llvm_root}llvm/lib/Support",
    "//${llvm_root}llvm/lib/TargetParser",
  ]

  # Reaches into Plugins/ExpressionParser.
  include_dirs = [ "//${llvm_root}lldb/source" ]
  sources = [
    "CodeViewRegisterMapping.cpp",
    "CompileUnitIndex.cpp",
    "DWARFLocationExpression.cpp",
    "PdbAstBuilder.cpp",
    "PdbFPOProgramToDWARFExpression.cpp",
    "PdbIndex.cpp",
    "PdbSymUid.cpp",
    "PdbUtil.cpp",
    "SymbolFileNativePDB.cpp",
    "UdtRecordCompleter.cpp",
  ]
}
