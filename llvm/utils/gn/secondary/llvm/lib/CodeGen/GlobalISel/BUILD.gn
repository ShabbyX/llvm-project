import("//build_overrides/llvm.gni")

static_library("GlobalISel") {
  output_name = "LLVMGlobalISel"
  deps = [
    "//${llvm_build_root}/secondary/llvm/include/llvm/Config:config",
    "//${llvm_build_root}/secondary/llvm/include/llvm/Config:llvm-config",
    "//${llvm_build_root}/secondary/llvm/lib/Analysis",
    "//${llvm_build_root}/secondary/llvm/lib/CodeGen",
    "//${llvm_build_root}/secondary/llvm/lib/IR",
    "//${llvm_build_root}/secondary/llvm/lib/MC",
    "//${llvm_build_root}/secondary/llvm/lib/Support",
    "//${llvm_build_root}/secondary/llvm/lib/Target",
    "//${llvm_build_root}/secondary/llvm/lib/Transforms/Utils",
  ]
  sources = [
    "CSEInfo.cpp",
    "CSEMIRBuilder.cpp",
    "CallLowering.cpp",
    "Combiner.cpp",
    "CombinerHelper.cpp",
    "GIMatchTableExecutor.cpp",
    "GISelChangeObserver.cpp",
    "GISelKnownBits.cpp",
    "GlobalISel.cpp",
    "IRTranslator.cpp",
    "InlineAsmLowering.cpp",
    "InstructionSelect.cpp",
    "InstructionSelector.cpp",
    "LegacyLegalizerInfo.cpp",
    "LegalityPredicates.cpp",
    "LegalizeMutations.cpp",
    "Legalizer.cpp",
    "LegalizerHelper.cpp",
    "LegalizerInfo.cpp",
    "LoadStoreOpt.cpp",
    "Localizer.cpp",
    "LostDebugLocObserver.cpp",
    "MachineIRBuilder.cpp",
    "RegBankSelect.cpp",
    "Utils.cpp",
  ]
  configs += llvm_code_override_configs_append
  configs -= llvm_code_override_configs_remove
}
