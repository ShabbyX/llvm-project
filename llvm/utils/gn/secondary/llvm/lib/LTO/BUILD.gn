import("//build_overrides/llvm.gni")

static_library("LTO") {
  output_name = "LLVMLTO"
  deps = [
    "//${llvm_build_root}/secondary/llvm/include/llvm/Config:config",
    "//${llvm_build_root}/secondary/llvm/lib/Analysis",
    "//${llvm_build_root}/secondary/llvm/lib/Bitcode/Reader",
    "//${llvm_build_root}/secondary/llvm/lib/Bitcode/Writer",
    "//${llvm_build_root}/secondary/llvm/lib/CodeGen",
    "//${llvm_build_root}/secondary/llvm/lib/Extensions",
    "//${llvm_build_root}/secondary/llvm/lib/IR",
    "//${llvm_build_root}/secondary/llvm/lib/Linker",
    "//${llvm_build_root}/secondary/llvm/lib/MC",
    "//${llvm_build_root}/secondary/llvm/lib/Object",
    "//${llvm_build_root}/secondary/llvm/lib/Passes",
    "//${llvm_build_root}/secondary/llvm/lib/Support",
    "//${llvm_build_root}/secondary/llvm/lib/Target",
    "//${llvm_build_root}/secondary/llvm/lib/TargetParser",
    "//${llvm_build_root}/secondary/llvm/lib/Transforms/AggressiveInstCombine",
    "//${llvm_build_root}/secondary/llvm/lib/Transforms/IPO",
    "//${llvm_build_root}/secondary/llvm/lib/Transforms/InstCombine",
    "//${llvm_build_root}/secondary/llvm/lib/Transforms/ObjCARC",
    "//${llvm_build_root}/secondary/llvm/lib/Transforms/Scalar",
    "//${llvm_build_root}/secondary/llvm/lib/Transforms/Utils",
  ]
  sources = [
    "LTO.cpp",
    "LTOBackend.cpp",
    "LTOCodeGenerator.cpp",
    "LTOModule.cpp",
    "SummaryBasedOptimizations.cpp",
    "ThinLTOCodeGenerator.cpp",
    "UpdateCompilerUsed.cpp",
  ]
  configs += llvm_code_override_configs_append
  configs -= llvm_code_override_configs_remove
}
