import("//build_overrides/llvm.gni")

import("//${llvm_root}llvm/utils/TableGen/tablegen.gni")

tablegen("AMDGPUGenSearchableTables") {
  visibility = [ ":Utils" ]
  args = [ "-gen-searchable-tables" ]
  td_file = "../AMDGPU.td"
}

static_library("Utils") {
  output_name = "LLVMAMDGPUUtils"
  public_deps = [ ":AMDGPUGenSearchableTables" ]
  deps = [
    # AMDGPUBaseInfo.cpp includes GCNSubtarget.h which after 490e348e679
    # includes the generated AMDGPUGenRegisterBank.inc file :/
    "../:AMDGPUGenRegisterBank",
    "//${llvm_root}llvm/lib/BinaryFormat",
    "//${llvm_root}llvm/lib/CodeGen",
    "//${llvm_root}llvm/lib/IR",
    "//${llvm_root}llvm/lib/MC",
    "//${llvm_root}llvm/lib/Support",
    "//${llvm_root}llvm/lib/TargetParser",

    # MCTargetDesc depends on Utils, so we can't depend on the full
    # MCTargetDesc target here: it would form a cycle.
    "//${llvm_root}llvm/lib/Target/AMDGPU/MCTargetDesc:tablegen",
  ]

  # AMDGPUBaseInfo.h includes a header from MCTargetDesc :-/
  include_dirs = [ ".." ]
  sources = [
    "AMDGPUAsmUtils.cpp",
    "AMDGPUBaseInfo.cpp",
    "AMDGPUMemoryUtils.cpp",
    "AMDGPUPALMetadata.cpp",
    "AMDKernelCodeTUtils.cpp",
  ]
  configs += llvm_code_override_configs_append
  configs -= llvm_code_override_configs_remove
}
