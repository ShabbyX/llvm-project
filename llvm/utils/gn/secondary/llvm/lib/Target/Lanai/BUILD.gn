import("//build_overrides/llvm.gni")

import("//${llvm_root}llvm/utils/TableGen/tablegen.gni")

tablegen("LanaiGenCallingConv") {
  visibility = [ ":LLVMLanaiCodeGen" ]
  args = [ "-gen-callingconv" ]
  td_file = "Lanai.td"
}

tablegen("LanaiGenDAGISel") {
  visibility = [ ":LLVMLanaiCodeGen" ]
  args = [ "-gen-dag-isel" ]
  td_file = "Lanai.td"
}

static_library("LLVMLanaiCodeGen") {
  deps = [
    ":LanaiGenCallingConv",
    ":LanaiGenDAGISel",
    "MCTargetDesc",
    "TargetInfo",
    "//${llvm_root}llvm/include/llvm/Config:llvm-config",
    "//${llvm_root}llvm/lib/Analysis",
    "//${llvm_root}llvm/lib/CodeGen",
    "//${llvm_root}llvm/lib/CodeGen/AsmPrinter",
    "//${llvm_root}llvm/lib/CodeGen/SelectionDAG",
    "//${llvm_root}llvm/lib/IR",
    "//${llvm_root}llvm/lib/MC",
    "//${llvm_root}llvm/lib/Support",
    "//${llvm_root}llvm/lib/Target",
    "//${llvm_root}llvm/lib/TargetParser",
  ]
  include_dirs = [ "." ]
  sources = [
    "LanaiAsmPrinter.cpp",
    "LanaiDelaySlotFiller.cpp",
    "LanaiFrameLowering.cpp",
    "LanaiISelDAGToDAG.cpp",
    "LanaiISelLowering.cpp",
    "LanaiInstrInfo.cpp",
    "LanaiMCInstLower.cpp",
    "LanaiMachineFunctionInfo.cpp",
    "LanaiMemAluCombiner.cpp",
    "LanaiRegisterInfo.cpp",
    "LanaiSelectionDAGInfo.cpp",
    "LanaiSubtarget.cpp",
    "LanaiTargetMachine.cpp",
    "LanaiTargetObjectFile.cpp",
  ]
}

# This is a bit different from most build files: Due to this group
# having the directory's name, "//${llvm_root}llvm/lib/Target/Lanai" will refer to this
# target, which pulls in the code in this directory *and all subdirectories*.
# For most other directories, "//${llvm_root}llvm/lib/Foo" only pulls in the code directly
# in "llvm/lib/Foo". The forwarding targets in //${llvm_root}llvm/lib/Target expect this
# different behavior.
group("Lanai") {
  deps = [
    ":LLVMLanaiCodeGen",
    "AsmParser",
    "Disassembler",
    "MCTargetDesc",
    "TargetInfo",
  ]
}
