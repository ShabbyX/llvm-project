import("//build_overrides/llvm.gni")

static_library("Instrumentation") {
  output_name = "LLVMInstrumentation"
  deps = [
    "//${llvm_build_root}/secondary/llvm/lib/Analysis",
    "//${llvm_build_root}/secondary/llvm/lib/IR",
    "//${llvm_build_root}/secondary/llvm/lib/MC",
    "//${llvm_build_root}/secondary/llvm/lib/ProfileData",
    "//${llvm_build_root}/secondary/llvm/lib/Support",
    "//${llvm_build_root}/secondary/llvm/lib/TargetParser",
    "//${llvm_build_root}/secondary/llvm/lib/Transforms/Utils",
  ]
  sources = [
    "AddressSanitizer.cpp",
    "BlockCoverageInference.cpp",
    "BoundsChecking.cpp",
    "CGProfile.cpp",
    "ControlHeightReduction.cpp",
    "DataFlowSanitizer.cpp",
    "GCOVProfiling.cpp",
    "HWAddressSanitizer.cpp",
    "IndirectCallPromotion.cpp",
    "InstrOrderFile.cpp",
    "InstrProfiling.cpp",
    "Instrumentation.cpp",
    "KCFI.cpp",
    "MemProfiler.cpp",
    "MemorySanitizer.cpp",
    "PGOInstrumentation.cpp",
    "PGOMemOPSizeOpt.cpp",
    "PoisonChecking.cpp",
    "SanitizerBinaryMetadata.cpp",
    "SanitizerCoverage.cpp",
    "ThreadSanitizer.cpp",
    "ValueProfileCollector.cpp",
  ]
  configs += llvm_code_override_configs_append
  configs -= llvm_code_override_configs_remove
}
