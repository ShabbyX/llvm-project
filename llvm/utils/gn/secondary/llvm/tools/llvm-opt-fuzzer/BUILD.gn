import("//build_overrides/llvm.gni")

import("//${llvm_build_root}/build/fuzzer.gni")

fuzzer("llvm-opt-fuzzer") {
  deps = [
    "//${llvm_build_root}/secondary/llvm/lib/Analysis",
    "//${llvm_build_root}/secondary/llvm/lib/Bitcode/Reader",
    "//${llvm_build_root}/secondary/llvm/lib/Bitcode/Writer",
    "//${llvm_build_root}/secondary/llvm/lib/CodeGen",
    "//${llvm_build_root}/secondary/llvm/lib/FuzzMutate",
    "//${llvm_build_root}/secondary/llvm/lib/IR",
    "//${llvm_build_root}/secondary/llvm/lib/IRReader",
    "//${llvm_build_root}/secondary/llvm/lib/MC",
    "//${llvm_build_root}/secondary/llvm/lib/Passes",
    "//${llvm_build_root}/secondary/llvm/lib/Support",
    "//${llvm_build_root}/secondary/llvm/lib/Target",
    "//${llvm_build_root}/secondary/llvm/lib/Target:TargetsToBuild",
    "//${llvm_build_root}/secondary/llvm/lib/TargetParser",
    "//${llvm_build_root}/secondary/llvm/lib/Transforms/AggressiveInstCombine",
    "//${llvm_build_root}/secondary/llvm/lib/Transforms/Coroutines",
    "//${llvm_build_root}/secondary/llvm/lib/Transforms/IPO",
    "//${llvm_build_root}/secondary/llvm/lib/Transforms/InstCombine",
    "//${llvm_build_root}/secondary/llvm/lib/Transforms/Instrumentation",
    "//${llvm_build_root}/secondary/llvm/lib/Transforms/ObjCARC",
    "//${llvm_build_root}/secondary/llvm/lib/Transforms/Scalar",
    "//${llvm_build_root}/secondary/llvm/lib/Transforms/Utils",
    "//${llvm_build_root}/secondary/llvm/lib/Transforms/Vectorize",
  ]
  dummy_main = "DummyOptFuzzer.cpp"
  sources = [ "llvm-opt-fuzzer.cpp" ]
}
